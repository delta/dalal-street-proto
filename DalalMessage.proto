syntax = "proto3";

package dalalstreet.api;
option go_package = "github.com/delta/dalal-street-server/proto_build";	 


import "actions/BuyStocksFromExchange.proto";
import "actions/CancelOrder.proto";
import "actions/Login.proto";
import "actions/Logout.proto";
import "actions/MortgageStocks.proto";
import "actions/PlaceOrder.proto";
import "actions/RetrieveMortgageStocks.proto";
import "actions/SendNews.proto";
import "actions/SendDividends.proto";
import "actions/SendNotifications.proto";
import "actions/OpenMarket.proto";
import "actions/CloseMarket.proto";
import "actions/UpdateEndOfDayValues.proto";
import "actions/LoadStocks.proto";
import "actions/AddStocksToExchange.proto";
import "actions/UpdateStockPrice.proto";
import "actions/AddMarketEvent.proto";
import "actions/UpdateMarketEvent.proto";
import "actions/AddDailyChallenge.proto";
import "actions/OpenDailyChallenge.proto";
import "actions/CloseDailyChallenge.proto";
import "actions/SetMarketDay.proto";
import "actions/InspectDegree.proto";
import "actions/InspectComponents.proto";
import "actions/ResendVerificationEmail.proto";
import "actions/SquareOffShortSell.proto";

import "actions/GetPortfolio.proto";
import "actions/CreateBot.proto";
import "actions/GetCompanyProfile.proto";
import "actions/GetMarketEvents.proto";
import "actions/GetMyOrders.proto";
import "actions/GetNotifications.proto";
import "actions/GetTransactions.proto";
import "actions/GetMortgageDetails.proto";
import "actions/GetLeaderboard.proto";
import "actions/GetDailyLeaderboard.proto";
import "actions/GetStockHistory.proto";
import "actions/Register.proto";
import "actions/ForgotPassword.proto";
import "actions/ChangePassword.proto";
import "actions/AddPhone.proto";
import "actions/VerifyOTP.proto";
import "actions/SetGivesDividends.proto";
import "actions/SetBankruptcy.proto";
import "actions/BlockUser.proto";
import "actions/UnblockUser.proto";
import "actions/InspectUser.proto";
import "actions/UnblockAllUsers.proto";
import "actions/GetReferralCode.proto";
import "actions/GetDailyChallenges.proto";
import "actions/GetMyUserState.proto";
import "actions/GetMyReward.proto";
import "actions/GetDailyChallengeConfig.proto";
import "actions/AddUserSubscription.proto";
import "actions/GetStockList.proto";
import "actions/PlaceIpoOrder.proto";
import "actions/AddIpoStocks.proto";

import "datastreams/Subscribe.proto";
import "datastreams/MarketDepth.proto";
import "datastreams/Transactions.proto";
import "datastreams/Notifications.proto";
import "datastreams/StockPrices.proto";
import "datastreams/StockExchange.proto";
import "datastreams/MarketEvents.proto";
import "datastreams/MyOrders.proto";
import "datastreams/StockHistory.proto";
import "datastreams/GameState.proto";

service DalalActionService {
	// Stock trading related functions
    rpc BuyStocksFromExchange(actions.BuyStocksFromExchangeRequest) 	returns (actions.BuyStocksFromExchangeResponse);
    rpc PlaceOrder(actions.PlaceOrderRequest) 							returns (actions.PlaceOrderResponse);
	rpc CancelOrder(actions.CancelOrderRequest) 						returns (actions.CancelOrderResponse);
	rpc MortgageStocks(actions.MortgageStocksRequest) 					returns (actions.MortgageStocksResponse);
	rpc RetrieveMortgageStocks(actions.RetrieveMortgageStocksRequest) 	returns (actions.RetrieveMortgageStocksResponse);

	// Getting information about transactions, orders, mortgage
	rpc GetMyOpenOrders(actions.GetMyOpenOrdersRequest)					returns (actions.GetMyOpenOrdersResponse);
	rpc GetMyClosedAsks(actions.GetMyClosedAsksRequest)					returns (actions.GetMyClosedAsksResponse);
	rpc GetMyClosedBids(actions.GetMyClosedBidsRequest)					returns (actions.GetMyClosedBidsResponse);
	rpc GetTransactions(actions.GetTransactionsRequest)   				returns (actions.GetTransactionsResponse);
	rpc GetMortgageDetails(actions.GetMortgageDetailsRequest) 			returns (actions.GetMortgageDetailsResponse);
	rpc GetMyUserState (actions.GetMyUserStateRequest) returns (actions.GetMyUserStateResponse);
	rpc GetMyReward (actions.GetMyRewardRequest) returns (actions.GetMyRewardResponse);
	rpc GetPortfolio(actions.GetPortfolioRequest)						returns (actions.GetPortfolioResponse);
	
	// Getting general information
	rpc GetCompanyProfile(actions.GetCompanyProfileRequest)				returns (actions.GetCompanyProfileResponse);
	rpc GetLeaderboard(actions.GetLeaderboardRequest)					returns (actions.GetLeaderboardResponse);
	rpc GetDailyLeaderboard(actions.GetDailyLeaderboardRequest)					returns (actions.GetDailyLeaderboardResponse);
	rpc GetMarketEvents(actions.GetMarketEventsRequest)     			returns (actions.GetMarketEventsResponse);
	rpc GetNotifications(actions.GetNotificationsRequest)   			returns (actions.GetNotificationsResponse);
	rpc GetStockHistory(actions.GetStockHistoryRequest)						returns (actions.GetStockHistoryResponse);
	rpc GetDailyChallenges (actions.GetDailyChallengesRequest)          returns (actions.GetDailyChallengesResponse);
	rpc GetDailyChallengeConfig (actions.GetDailyChallengeConfigRequest) returns (actions.GetDailyChallengeConfigResponse);
	rpc GetStockList (actions.GetStockListRequest) returns (actions.GetStockListResponse);
	
	// Auth
	rpc Login(actions.LoginRequest) 									returns (actions.LoginResponse);
	rpc Logout(actions.LogoutRequest) 									returns (actions.LogoutResponse);
	rpc Register(actions.RegisterRequest)								returns (actions.RegisterResponse);
	rpc ForgotPassword(actions.ForgotPasswordRequest)                   returns (actions.ForgotPasswordResponse);
	rpc ChangePassword(actions.ChangePasswordRequest)                   returns (actions.ChangePasswordResponse);
	rpc AddPhone(actions.AddPhoneRequest)								returns (actions.AddPhoneResponse);
	rpc VerifyPhone(actions.VerifyOTPRequest)							returns (actions.VerifyOTPResponse);
	rpc GetReferralCode(actions.GetReferralCodeRequest)		            returns (actions.GetReferralCodeResponse);
	rpc AddUserSubscription(actions.AddUserSubscriptionRequest)             returns (actions.AddUserSubscriptionResponse);  
	rpc ResendVerificationEmail(actions.ResendVerificationEmailRequest)				returns (actions.ResendVerificationEmailResponse);

	//Bots
	rpc CreateBot(actions.CreateBotRequest)								returns (actions.CreateBotResponse);

	//Admin
	rpc SendNews(actions.SendNewsRequest)								returns (actions.SendNewsResponse);
    rpc SendDividends(actions.SendDividendsRequest)     returns (actions.SendDividendsResponse);
	rpc SendNotifications(actions.SendNotificationsRequest) returns (actions.SendNotificationsResponse);
    rpc OpenMarket(actions.OpenMarketRequest) returns (actions.OpenMarketResponse);
	rpc CloseMarket(actions.CloseMarketRequest) returns (actions.CloseMarketResponse);
	rpc UpdateEndOfDayValues(actions.UpdateEndOfDayValuesRequest) returns(actions.UpdateEndOfDayValuesResponse);
	rpc LoadStocks(actions.LoadStocksRequest) returns (actions.LoadStocksResponse);
	rpc AddStocksToExchange(actions.AddStocksToExchangeRequest) returns (actions.AddStocksToExchangeResponse);
	rpc UpdateStockPrice(actions.UpdateStockPriceRequest) returns (actions.UpdateStockPriceResponse);
	rpc AddMarketEvent(actions.AddMarketEventRequest) returns (actions.AddMarketEventResponse);
	rpc UpdateMarketEvent(actions.UpdateMarketEventRequest) returns (actions.UpdateMarketEventResponse);
	rpc SetGivesDividends(actions.SetGivesDividendsRequest)     		returns (actions.SetGivesDividendsResponse);
    rpc SetBankruptcy(actions.SetBankruptcyRequest)     				returns (actions.SetBankruptcyResponse);
	rpc InspectUser(actions.InspectUserRequest)     				returns (actions.InspectUserResponse);
	rpc BlockUser(actions.BlockUserRequest)     				returns (actions.BlockUserResponse);
	rpc UnBlockUser(actions.UnblockUserRequest)     				returns (actions.UnblockUserResponse);
	rpc UnBlockAllUsers(actions.UnblockAllUsersRequest)     				returns (actions.UnblockAllUsersResponse);
	rpc AddDailyChallenge (actions.AddDailyChallengeRequest) returns (actions.AddDailyChallengeResponse);
	rpc OpenDailyChallenge (actions.OpenDailyChallengeRequest) returns (actions.OpenDailyChallengeResponse);
	rpc CloseDailyChallenge (actions.CloseDailyChallengeRequest) returns (actions.CloseDailyChallengeResponse);
	rpc SetMarketDay (actions.SetMarketDayRequest) returns (actions.SetMarketDayResponse);
	rpc InspectUserDegree(actions.InspectDegreeRequest)				returns (actions.InspectDegreeResponse);
	rpc InspectConnectedComponents(actions.InspectComponentsRequest) returns (actions.InspectComponentsResponse);
	rpc SquareOffShortSells(actions.SquareOffShortSellRequest) returns (actions.SquareOffShortSellResponse);
	rpc PlaceIpoOrder(actions.PlaceIpoOrderRequest)				returns (actions.PlaceIpoOrderResponse);
	rpc AddIpoStocks(actions.AddIpoStocksToExchangeRequest)			returns (actions.AddIpoStocksToExchangeResponse);
}

service DalalStreamService {
	// Subscription
	rpc Subscribe(datastreams.SubscribeRequest) 			returns (datastreams.SubscribeResponse);
	rpc Unsubscribe(datastreams.UnsubscribeRequest) 		returns (datastreams.UnsubscribeResponse);

	// Datastreams
	rpc GetMarketDepthUpdates(datastreams.SubscriptionId)	returns (stream datastreams.MarketDepthUpdate);
	rpc GetMarketEventUpdates(datastreams.SubscriptionId)	returns (stream datastreams.MarketEventUpdate);
	rpc GetMyOrderUpdates(datastreams.SubscriptionId)		returns (stream datastreams.MyOrderUpdate);
	rpc GetNotificationUpdates(datastreams.SubscriptionId)	returns (stream datastreams.NotificationUpdate);
	rpc GetStockExchangeUpdates(datastreams.SubscriptionId)	returns (stream datastreams.StockExchangeUpdate);
	rpc GetStockPricesUpdates(datastreams.SubscriptionId)	returns (stream datastreams.StockPricesUpdate);
	rpc GetTransactionUpdates(datastreams.SubscriptionId)	returns (stream datastreams.TransactionUpdate);
	rpc GetStockHistoryUpdates(datastreams.SubscriptionId)  returns (stream datastreams.StockHistoryUpdate);
	rpc GetGameStateUpdates(datastreams.SubscriptionId)		returns (stream datastreams.GameStateUpdate);
}
